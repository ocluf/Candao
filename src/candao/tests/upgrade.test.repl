#!/usr/bin/ic-repl

identity alice;


let id = call ic.provisional_create_canister_with_cycles(record { settings = null; amount = null });
let canister = id.canister_id;
canister;
let _ = call ic.install_code(
  record {
    arg = encode ();
    wasm_module = file "../../../target/wasm32-unknown-unknown/release/candao.wasm";
    mode = variant { install };
    canister_id = canister;
  },
);

let _ = call canister.get_members();
assert _ == vec {};


let _ = call canister.take_control();
assert _ == variant { Success };

let _ = call canister.get_members();
assert _ == vec {
  record {
    name = "";
    description = "";
    principal_id = alice;
  }
};

let _ = call canister.update_member_info("Alice", "Alice is not real");
assert _ == variant {Success};

let _  = call canister.get_dao_info();
assert _ == record {
  title = "CanDAO";
  description = "";
};

let _ = call canister.update_dao_info(
  record {
    title = "TestTitle";
    description = "I am a DAO";
  }
) ; 

let _ = call ic.install_code(
  record {
    arg = encode ();
    wasm_module = file "../../../target/wasm32-unknown-unknown/release/candao.wasm";
    mode = variant { upgrade };
    canister_id = canister;
  },
);

let _ = call canister.get_members();
assert _ == vec {
  record {
    name = "Alice";
    description = "Alice is not real";
    principal_id = alice;
  }
};  

let _  = call canister.get_dao_info();
assert _ == record {
  title = "TestTitle";
  description = "I am a DAO";
};
